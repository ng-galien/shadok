# Kubernetes deployment configuration
quarkus.kubernetes.namespace=shadok
quarkus.kubernetes.deployment-target=kubernetes
quarkus.kubernetes.add-build-timestamp=true
quarkus.kubernetes.labels."app.kubernetes.io/part-of"=shadok
quarkus.kubernetes.service-account=shadok

# Container configuration
quarkus.container-image.registry=localhost:5001
quarkus.container-image.group=shadok
quarkus.container-image.name=operator
quarkus.container-image.tag=latest
quarkus.container-image.build=true
quarkus.container-image.push=true
quarkus.container-image.builder=docker

# HTTP/HTTPS configuration
quarkus.http.port=8080
quarkus.http.ssl-port=9443
quarkus.http.insecure-requests=redirect

# TLS configuration named "https"
quarkus.tls.https.key-store.pem.0.cert=/tls/tls.crt
quarkus.tls.https.key-store.pem.0.key=/tls/tls.key
quarkus.http.tls-configuration-name=https

# Kubernetes deployment
quarkus.kubernetes.deploy=true
quarkus.kubernetes.image-pull-policy=Always

# Exposer les ports HTTP et HTTPS explicitement 
quarkus.kubernetes.ports.http.container-port=8080
quarkus.kubernetes.ports.https.container-port=9443
quarkus.kubernetes.ports.https.protocol=TCP

# Mount TLS certificates
quarkus.kubernetes.mounts.tls.path=/tls
quarkus.kubernetes.mounts.tls.read-only=true
quarkus.kubernetes.secret-volumes.tls.secret-name=webhook-tls
quarkus.kubernetes.secret-volumes.tls.default-mode=0644

# Service ports configuration (webhook port is added via Service annotation)
quarkus.kubernetes.annotations."service.alpha.kubernetes.io/app-protocol"=https

# Webhook configuration
quarkus.kubernetes-client.devservices.enabled=true
quarkus.kubernetes-client.trust-certs=true
quarkus.kubernetes-client.generate-rbac=true

# Operator SDK configuration
quarkus.operator-sdk.crd.apply=true
quarkus.operator-sdk.crd.validate=true
quarkus.operator-sdk.crd.generate=true
quarkus.operator-sdk.crd.generate-all=true
quarkus.operator-sdk.crd.output-directory=kubernetes
quarkus.operator-sdk.enable-ssa=true
quarkus.operator-sdk.generation-aware=true
quarkus.operator-sdk.start-operator=true

# RBAC configuration for operator - avec namespace spécifié
quarkus.kubernetes.rbac.service-accounts.shadok.namespace=shadok

quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.apps.api-groups=apps
quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.apps.resources=deployments,replicasets
quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.apps.verbs=get,list,watch,create,update,patch,delete

quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.core.api-groups=""
quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.core.resources=pods,services,persistentvolumeclaims,persistentvolumes
quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.core.verbs=get,list,watch,create,update,patch,delete

quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.crds.api-groups=shadok.org
quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.crds.resources=*
quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.crds.verbs=*

quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.admission.api-groups=admissionregistration.k8s.io
quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.admission.resources=mutatingwebhookconfigurations
quarkus.kubernetes.rbac.cluster-roles.shadok-operator.policy-rules.admission.verbs=get,list,watch,create,update,patch,delete

# Helm chart generation (disabled for now)
quarkus.operator-sdk.helm.enabled=false

# Logging configuration
quarkus.log.level=INFO
quarkus.log.category."org.shadok.operator".level=DEBUG

# Debug profile configuration
%debug.quarkus.log.level=DEBUG
%debug.quarkus.log.category."org.shadok.operator.webhook".level=TRACE
%debug.quarkus.http.port=8080
%debug.quarkus.http.test-port=8081
