# Configuration for Quarkus Hello World Pod
quarkus.http.port=8080
quarkus.http.host=0.0.0.0

# Application info
quarkus.application.name=quarkus-hello
quarkus.application.version=1.0.0-SNAPSHOT

# Kubernetes configuration
quarkus.kubernetes.name=quarkus-hello
quarkus.kubernetes.namespace=shadok
quarkus.kubernetes.labels."app.kubernetes.io/name"=quarkus-hello
quarkus.kubernetes.labels."app.kubernetes.io/version"=1.0.0-SNAPSHOT
quarkus.kubernetes.labels."app.kubernetes.io/part-of"=shadok-pods
quarkus.kubernetes.labels."app"=quarkus-hello

# Shadok webhook configuration
quarkus.kubernetes.annotations."org.shadok/application"=quarkus-hello-app

# Resource limits
quarkus.kubernetes.resources.requests.memory=256Mi
quarkus.kubernetes.resources.requests.cpu=100m
quarkus.kubernetes.resources.limits.memory=512Mi
quarkus.kubernetes.resources.limits.cpu=500m

# Health checks
quarkus.kubernetes.liveness-probe.http-action-path=/q/health/live
quarkus.kubernetes.readiness-probe.http-action-path=/q/health/ready
quarkus.kubernetes.startup-probe.http-action-path=/q/health/started

# Service configuration
quarkus.kubernetes.service-type=ClusterIP
quarkus.kubernetes.ports.http.container-port=8080
quarkus.kubernetes.ports.http.protocol=TCP

# Ingress configuration
quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.ingress.host=quarkus-hello.127.0.0.1.nip.io
quarkus.kubernetes.ingress.ingress-class-name=nginx

# Container image
quarkus.container-image.build=true
quarkus.container-image.group=shadok-pods
quarkus.container-image.name=quarkus-hello
quarkus.container-image.tag=latest

# Live reload configuration for development
quarkus.live-reload.instrumentation=true
quarkus.live-reload.password=changeit

# Health checks
quarkus.smallrye-health.root-path=/q/health

# Logging
quarkus.log.level=INFO
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Profil Kind pour le développement local avec le cluster shadok-dev
%kind.quarkus.kubernetes.deployment-target=kubernetes
%kind.quarkus.container-image.builder=jib
%kind.quarkus.container-image.push=false
%kind.quarkus.kubernetes.namespace=shadok

# Configuration Ingress spécifique pour Kind
%kind.quarkus.kubernetes.ingress.expose=true
%kind.quarkus.kubernetes.ingress.host=quarkus-hello.127.0.0.1.nip.io
%kind.quarkus.kubernetes.ingress.ingress-class-name=nginx

# Configuration spécifique pour Kind
%kind.quarkus.kubernetes.env.vars.JAVA_OPTS=-Dquarkus.http.host=0.0.0.0 -Xmx256m -Xms128m
%kind.quarkus.kubernetes.env.vars.KUBERNETES_NAMESPACE=shadok

# Configuration Jib pour Kind - optimisée pour le registry local
%kind.quarkus.container-image.registry=localhost:5001
%kind.quarkus.container-image.group=shadok-pods
%kind.quarkus.container-image.name=quarkus-hello
%kind.quarkus.container-image.tag=latest
%kind.quarkus.kubernetes.image-pull-policy=IfNotPresent
